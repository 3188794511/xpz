<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lj.user.mapper.ViewHistoryMapper">
	<resultMap id="viewHistoryMap" type="com.lj.vo.ViewHistoryVo">
		<id column="id" property="id"></id>
		<result column="blog_id" property="hotBlogVo.id"></result>
		<result column="title" property="hotBlogVo.title"></result>
		<result column="author_id" property="hotBlogVo.authorId"></result>
		<result column="author_name" property="hotBlogVo.username"></result>
		<result column="pic" property="hotBlogVo.pic"></result>
		<result column="article_summary" property="hotBlogVo.articleSummary"></result>
		<result column="views" property="hotBlogVo.views"></result>
		<result column="likes" property="hotBlogVo.likes"></result>
		<result column="publish_date" property="hotBlogVo.publishDate"></result>
		<result column="cover" property="hotBlogVo.cover"></result>
		<result column="view_time" property="viewTime"></result>
	</resultMap>
	
	<select id="selectViewHistoryByUserId" resultMap="viewHistoryMap">
		select
			t1.*,u.nick_name author_name,u.pic
		 from
		(select
			vh.id id,vh.view_time,b.id blog_id,b.author_id,b.title,b.cover,b.article_summary,b.views,b.likes,b.publish_date
		from view_history vh
			     inner join xpz_blog.blog b
			                on vh.blog_id = b.id
		where vh.user_id = #{userId} and vh.is_deleted = 0 and b.is_deleted = 0) t1
			     inner join tb_user u
			                on t1.author_id = u.id
		order by t1.view_time desc
		limit #{page},#{size}
	</select>
	
	<select id="selectViewHistoryCount" resultType="java.lang.Long" parameterType="java.lang.Long">
		select
			count(vh.id)
		from view_history vh
			     inner join xpz_blog.blog b
			                on vh.blog_id = b.id
		where vh.user_id = #{userId} and vh.is_deleted = 0 and b.is_deleted = 0
	</select>
</mapper>
